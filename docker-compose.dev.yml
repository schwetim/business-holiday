services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: travel_mvp
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      - db


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.frontend
    environment:
      - NODE_ENV=development
      - BACKEND_URL=http://backend:5000
      - WATCHPACK_POLLING=true
    depends_on:
      backend:
        condition: service_healthy

  prisma-studio:
    build:
      context: ./backend
      dockerfile: Dockerfile.prisma
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/app
    environment:
      - PORT=5555
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/travel_mvp?schema=public
    command: npx prisma studio --port 5555

volumes:
  pgdata:
